task1:
    // Задача: Напишите программу которая:
    // 1. Заполняет массив случайными числами
    // 2. Находит минимальный и максимальный элементы
    // 3. Сортирует массив (пузырьком)
    // 4. Вычисляет среднее арифметическое
task2:
    // Задача: Создайте структуру Student с полями:
    // - имя (массив char)
    // - возраст (int)
    // - средний балл (float)
    // Напишите функции:
    // 1. Ввод данных студента
    // 2. Вывод данных студента
    // 3. Поиск студента с лучшим баллом
task3:
    // Задача: Реализуйте динамический массив с функциями:
    // - create_array(int initial_size)
    // - add_element(int **arr, int *size, int *capacity, int value)
    // - remove_element(int *arr, int *size, int index)
    // - resize_array(int **arr, int *capacity)

    // Подсказка: Используйте стратегию увеличения размера в 2 раза
task4
    // Задача: Создайте систему управления сотрудниками:
    // Структура Employee: имя, должность, зарплата, стаж
    // Функции:
    // - добавление сотрудника (динамический массив структур)
    // - удаление сотрудника
    // - поиск по имени
    // - сортировка по зарплате
    // - сохранение в файл / загрузка из файла
task5:
    // Задача: Реализуйте связный список студентов:
    // Структура Node: Student + указатель на next
    // Функции:
    // - добавление в начало/конец
    // - удаление по имени
    // - поиск по критериям
    // - сортировка списка
    // - сохранение/загрузка из файла
task6:
    // Задача: Создайте библиотеку для работы с матрицами:
    // - создание/удаление матрицы (двойной указатель)
    // - сложение/умножение матриц
    // - транспонирование
    // - нахождение определителя (для продвинутых)
task7:
    // Задача: Система банковских счетов:
    // Структура Account: номер счета, владелец, баланс, история операций
    // Функции:
    // - создание счета
    // - пополнение/снятие
    // - перевод между счетами
    // - просмотр истории операций
task8:
    // Реализуйте телефонную книгу с функциями:
    // - добавление контакта (имя, телефон, email)
    // - поиск контакта
    // - удаление контакта
    // - редактирование контакта
    // - сортировка по имени
    // - сохранение в файл

    // Используйте: структуры, динамические массивы, указатели, работу с файлами
task9:
    // To-Do список с функциями:
    // - добавление задачи (название, описание, приоритет, срок)
    // - отметка о выполнении
    // - фильтрация по приоритету/статусу
    // - сортировка по сроку/приоритету

    // Используйте: связные списки, динамическую память, структуры
task10:
    // Программа для анализа текста:
    // - подсчет слов, символов, строк
    // - поиск самого частого слова
    // - замена слов в тексте
    // - статистика по длинам слов

    // Используйте: строки, указатели, динамические массивы, структуры для хранения статистики
